#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass memoir
\use_default_options true
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman charter
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Git: guía de referencia"
\pdf_author "Luis Barrios Hernández"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Git: guía de referencia
\end_layout

\begin_layout Section
Git y Subversion
\end_layout

\begin_layout Standard
Generalmente, los repositorios más utilizados, tales como SVN, se encuentran
 estructurados como se indica en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Subversion"

\end_inset

.
 Existe un único repositorio central, al que se van haciendo 
\emph on
commits
\emph default
 cuando es necesario.
 En estos casos, lo más normal es trabajar en un directorio separado, pegar
 los ficheros modificados en el directorio donde está la copia del repositorio
 y hacer el 
\emph on
commit
\emph default
.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Subversion.png
	scale 32

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Subversion"

\end_inset

Subversion
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Git.png
	scale 32

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Git"

\end_inset

Git
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Con Git la situación es bastante diferente, siguiendo la estructura representada
 en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Git"

\end_inset

.
 Git es un sistema de control de versiones distribuido, por lo que no existe
 el gran repositorio central: todos los repositorios tienen la misma importancia.
 
\end_layout

\begin_layout Standard
La forma de trabajar en Git es bastante distinta: cada desarrollador tendrá
 su repositorio local, al que irá haciendo 
\emph on
commits
\emph default
 cuando quiera.
 Es posible descargar información de los repositorios de otros (repositorios
 remotos), y también es posible subir información a esos repositorios.
 Así, el repositorio de Google Code será un repositorio más.
\end_layout

\begin_layout Section
Instalación y configuración básica de Git
\begin_inset CommandInset label
LatexCommand label
name "sec:Instalación-y-configuración"

\end_inset


\end_layout

\begin_layout Standard
Para empezar a utilizar Git, es necesario diponer del binario instalado
 en nuestro sistema.
 Para ello, abrimos un terminal y escribimos
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
$ sudo apt-get install git gitk
\end_layout

\begin_layout Standard
Una vez hecho esto, fijaremos algunas cosas importantes (como el nombre
 de usuario) y otras que no lo son tanto, pero que facilitan el uso de Git.
\end_layout

\begin_layout Standard
Para determinar el editor que se utilizará a la hora de escribir los commit,
 escribimos
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
export EDITOR=nano
\end_layout

\begin_layout Standard
al final del fichero 
\family typewriter
~/.bashrc
\family default
.
 
\end_layout

\begin_layout Standard
Lo siguiente que haremos es introducir nuestro nombre de usuario y dirección
 de correo electrónico.
 Esto no hace falta para conectarse a Google Code: simplemente se utilizará
 para firmar los 
\emph on
commits
\emph default
.
 Para ello, abrimos un terminal y escribimos
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "13cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
$ git config --global user.name 
\begin_inset Quotes eld
\end_inset

<Nombre de usuario>
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
$ git config --global user.email 
\begin_inset Quotes eld
\end_inset

<Correo electrónico>
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El 
\emph on
flag
\emph default
 
\family typewriter
--global
\family default
 indica que utilizaremos estos ajustes en 
\emph on
todos
\emph default
 los repositorios.
 Si queremos utilizarlos solamente en algunos, iremos al directorio del
 repositorio y ejecutaremos estas órdenes sin el 
\emph on
flag
\emph default
 
\family typewriter
--global
\family default
.
\end_layout

\begin_layout Standard
Finalmente, cambiaremos un poco los colores predeterminados para facilitar
 la lectura de los mensajes de Git.
 Para ello, añadimos este texto al fichero 
\family typewriter
~/.gitconfig
\family default
.
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "12cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
[color] 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

ui = true 
\end_layout

\begin_layout Plain Layout

\family typewriter
[color "branch"] 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

current = yellow reverse 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

local = yellow 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

remote = green 
\end_layout

\begin_layout Plain Layout

\family typewriter
[color "diff"] 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

meta = yellow bold 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

frag = magenta bold 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

old = red bold 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

new = green bold 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

whitespace = red reverse 
\end_layout

\begin_layout Plain Layout

\family typewriter
[color "status"] 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

added = yellow 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

changed = green 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

untracked = cyan
\end_layout

\begin_layout Plain Layout

\family typewriter
[core]
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
\end_layout

\end_inset


\end_layout

\begin_layout Section
Uso del repositorio de Google Code
\end_layout

\begin_layout Standard
Los repositorios de Google Code son públicos, por lo que cualquiera puede
 leer de ellos.
 Lo primero que debemos hacer para poder comenzar a utilizar nuestro repositorio
 es obtener una copia local del mismo.
 Para ello, ejecutamos la orden
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "13cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
$ git clone https://code.google.com/p/cygnus-cloud/
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En el directorio de trabajo aparecerá el directorio 
\family typewriter
cygnus-cloud
\family default
 con todo el contenido del repositorio.
\end_layout

\begin_layout Standard
Pero aún no hemos terminado: para hacer un 
\emph on
commit
\emph default
 es necesario autenticarse.
 Para ello, añadimos la línea
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "13cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
machine code.google.com login <correo gmail> password <contraseña google code>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
al fichero 
\family typewriter
~/.netrc
\family default
.
 Con esto, ya podremos utilizar el repositorio de Google Code.
\end_layout

\begin_layout Section
Uso básico de Git
\end_layout

\begin_layout Subsection
Registrar cambios en el repositorio
\end_layout

\begin_layout Standard
Ahora que tenemos un repositorio, ha llegado el momento de utilizarlo.
 Cada uno de los ficheros del directorio de trabajo puede estar en dos estados:
\end_layout

\begin_layout Itemize

\emph on
tracked
\emph default
 (registrados).
 Se trata de ficheros que ya estaban en el repositorio.
 A su vez, pueden estar en tres estados: 
\emph on
unmodified
\emph default
 (actualizados en el repositorio), 
\emph on
modified
\emph default
 (sin actualizar en el repositorio) o 
\emph on
staged 
\emph default
(ficheros modificados 
\emph on
que hay que subir 
\emph default
al repositorio).
\end_layout

\begin_layout Itemize

\emph on
untracked
\emph default
 (no registrados).
 En este grupo están el resto de ficheros.
\end_layout

\begin_layout Standard
El ciclo de vida de un fichero en Git aparece en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ciclo-de-vida-fichero"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename CicloVidaFichero.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Ciclo-de-vida-fichero"

\end_inset

Ciclo de vida de un fichero en Git
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Cuando se clona el repositorio, todas los ficheros estarán en estado 
\emph on
tracked
\emph default
 y 
\emph on
unmodified
\emph default
 (aún no se ha hecho nada con ellos).
 A medida que se editan, pasan a estar en estado 
\emph on
modified
\emph default
.
 Finalmente, pasan a estado 
\emph on
staged 
\emph default
y se hace un 
\emph on
commit
\emph default
 para reflejar los cambios en el repositorio.
\end_layout

\begin_layout Standard
Todos los ficheros que se subirán al repositorio al hacer un 
\emph on
commit
\emph default
 se encuentran en la 
\emph on
staging area
\emph default
.
\end_layout

\begin_layout Subsubsection
Comprobando el estado de los ficheros
\end_layout

\begin_layout Standard
Para determinar el estado de los ficheros se utiliza la orden 
\family typewriter
git status
\family default
.
 Justo después de clonar el repositorio, su salida es
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "13cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git status 
\end_layout

\begin_layout Plain Layout

\family typewriter
# On branch master 
\end_layout

\begin_layout Plain Layout

\family typewriter
nothing to commit (working directory clean) 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como era de esperar, no ha habido cambios con respecto al repositorio.
 Es más, no existe ningún fichero nuevo, ya que en ese caso habría aparecido
 en la salida.
 Además, el comando nos indica que estamos utilizando la rama (
\emph on
branch
\emph default
) 
\family typewriter
master
\family default
, que es la rama por defecto.
 Si añadimos algo, como el fichero 
\family typewriter
README.txt
\family default
, la salida del comando 
\family typewriter
git status
\family default
 ya es diferente.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "15cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ touch README.txt
\end_layout

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git status
\end_layout

\begin_layout Plain Layout

\family typewriter
# On branch master 
\end_layout

\begin_layout Plain Layout

\family typewriter
# Untracked files: 
\end_layout

\begin_layout Plain Layout

\family typewriter
# 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(use "git add <file>..." to include in what will be committed)
\end_layout

\begin_layout Plain Layout

\family typewriter
# 
\end_layout

\begin_layout Plain Layout

\family typewriter
# 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

README.txt
\end_layout

\begin_layout Plain Layout

\family typewriter
nothing added to commit but untracked files present (use "git add" to track)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Incluyendo nuevos ficheros
\end_layout

\begin_layout Standard
Para evitar errores, Git 
\emph on
no
\emph default
 incluirá ficheros en estado 
\emph on
untracked
\emph default
 a no ser que se le pida explícitamente.
 Para ello, se utiliza la orden 
\family typewriter
git add
\family default
.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "15cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git add README.txt
\end_layout

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git status 
\end_layout

\begin_layout Plain Layout

\family typewriter
# On branch master 
\end_layout

\begin_layout Plain Layout

\family typewriter
# Changes to be committed: 
\end_layout

\begin_layout Plain Layout

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 (use "git reset HEAD <file>..." to unstage) 
\end_layout

\begin_layout Plain Layout

\family typewriter
# 
\end_layout

\begin_layout Plain Layout

\family typewriter
# new file: README.txt 
\end_layout

\begin_layout Plain Layout

\family typewriter
# 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Al ejecutar nuevamente la orden git status, podemos comprobar que el fichero
 
\family typewriter
README.txt
\family default
 está en estado 
\emph on
tracked
\emph default
 y 
\emph on
staged
\emph default
.
 
\end_layout

\begin_layout Standard
En general, la sintaxis de la orden 
\family typewriter
git add
\family default
 es 
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
git add <ruta>
\end_layout

\begin_layout Standard
Si 
\family typewriter
<ruta>
\family default
 es un directorio, se añaden recursivamente todos los ficheros.
 Si es un fichero, se añade únicamente ese fichero.
\end_layout

\begin_layout Subsubsection
Modificando ficheros ya existentes
\end_layout

\begin_layout Standard
Supongamos que, tras hacer el 
\emph on
commit
\emph default
, modificamos el fichero 
\family typewriter
README.txt
\family default
.
 Tras ejecutar la orden git status, obtendríamos algo como esto:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "15cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git status 
\end_layout

\begin_layout Plain Layout

\family typewriter
# On branch master
\end_layout

\begin_layout Plain Layout

\family typewriter
# Changes not staged for commit: 
\end_layout

\begin_layout Plain Layout

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 (use "git add <file>..." to update what will be committed) 
\end_layout

\begin_layout Plain Layout

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 (use "git checkout -- <file>..." to discard changes in working directory)
 
\end_layout

\begin_layout Plain Layout

\family typewriter
# 
\end_layout

\begin_layout Plain Layout

\family typewriter
# modified: README.txt 
\end_layout

\begin_layout Plain Layout

\family typewriter
#
\end_layout

\end_inset


\end_layout

\begin_layout Standard
¿Qué ocurre? El fichero 
\family typewriter
README.txt
\family default
 ha sido modificado.
 Para indicar que queremos que los cambios sean permanentes, hay que conseguir
 que el fichero pase a estado 
\emph on
staged
\emph default
.
 Para ello volvemos a utilizar la orden 
\family typewriter
git add
\family default
.
 Ahora, la salida será
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "15cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git add README.txt
\end_layout

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git status 
\end_layout

\begin_layout Plain Layout

\family typewriter
# On branch master 
\end_layout

\begin_layout Plain Layout

\family typewriter
# Changes to be committed: 
\end_layout

\begin_layout Plain Layout

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 (use "git reset HEAD <file>..." to unstage) 
\end_layout

\begin_layout Plain Layout

\family typewriter
# 
\end_layout

\begin_layout Plain Layout

\family typewriter
# modified: README.txt 
\end_layout

\begin_layout Plain Layout

\family typewriter
# 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Supongamos que introducimos una modificación de última hora.
 Si volvemos a ejecutar la orden 
\family typewriter
git status
\family default
, obtendremos algo como
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "15cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git status 
\end_layout

\begin_layout Plain Layout

\family typewriter
# On branch master
\end_layout

\begin_layout Plain Layout

\family typewriter
# Changes not staged for commit:
\end_layout

\begin_layout Plain Layout

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 (use "git add <file>..." to update what will be committed) 
\end_layout

\begin_layout Plain Layout

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 (use "git checkout -- <file>..." to discard changes in working directory)
 
\end_layout

\begin_layout Plain Layout

\family typewriter
# 
\end_layout

\begin_layout Plain Layout

\family typewriter
# modified: README.txt 
\end_layout

\begin_layout Plain Layout

\family typewriter
#
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Hemos vuelto al mismo estado que al principio ya que los datos que se añadirán
 al repositorio al hacer el 
\emph on
commit
\emph default
 se fijan en el momento en que se ejecuta la orden 
\family typewriter
git add
\family default
.
 Si tras ejecutar esta orden se realiza otra modificación, será necesario
 volver a ejecutar el comando 
\family typewriter
git add
\family default
 antes de hacer el 
\emph on
commit
\emph default
 si queremos que los nuevos cambios se reflejen en el repositorio.
\end_layout

\begin_layout Subsubsection
Ignorando ficheros y directorios
\end_layout

\begin_layout Standard
Pueden existir ficheros irrelevantes que no queremos que estén en el repositorio.
 Es el caso de los ejecutables, ficheros temporales, 
\emph on
logs
\emph default
, ficheros auxiliares\SpecialChar \ldots{}

\end_layout

\begin_layout Standard
Para excluirlos, basta con crear el fichero 
\family typewriter
.gitignore
\family default
 en el directorio de trabajo y escribir en él unas cuantas expresiones regulares.
 El contenido de uno de estos ficheros podría ser este:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "15cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ cat .gitignore
\end_layout

\begin_layout Plain Layout

\family typewriter
*~
\end_layout

\begin_layout Plain Layout

\family typewriter
*.class
\end_layout

\begin_layout Plain Layout

\family typewriter
*.[oa]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Con esto, estamos ignorando los ficheros temporales, los ficheros 
\family typewriter
.class
\family default
 (
\emph on
bytecode
\emph default
 de la JVM) y los ficheros de código objeto (con extensión 
\family typewriter
.o
\family default
 o 
\family typewriter
.a
\family default
).
\end_layout

\begin_layout Standard
Las reglas para generar estos ficheros son las siguientes:
\end_layout

\begin_layout Itemize
Las líneas en blanco y las que empiezan por almohadilla (
\family typewriter
#
\family default
) son ignoradas.
\end_layout

\begin_layout Itemize
Las expresiones regulares deben ser patrones glob.
 Podemos encontrar más información sobre esto en 
\begin_inset CommandInset href
LatexCommand href
name "aquí"
target "http://en.wikipedia.org/wiki/Glob_(programming)"

\end_inset

.
\end_layout

\begin_layout Itemize
Los patrones que terminan por 
\family typewriter
/
\family default
 hacen referencia a directorios.
\end_layout

\begin_layout Itemize
Los patrones que comienzan por admiración (
\family typewriter
!
\family default
) están negados.
\end_layout

\begin_layout Subsubsection
Nuestro primer 
\emph on
commit
\end_layout

\begin_layout Standard
Una vez que tenemos claro qué queremos subir al repositorio, ha llegado
 el momento de hacer nuestro primer 
\emph on
commit
\emph default
.
 Es importante notar que todo lo que esté en estado 
\emph on
unstaged
\emph default
 (cambios no confirmados) 
\emph on
no
\emph default
 se subirá al repositorio.
\end_layout

\begin_layout Standard
Para hacer el 
\emph on
commit
\emph default
, basta con ejecutar la orden 
\family typewriter
git commit
\family default
.
 Al hacerlo, se abrirá el editor que fijamos en la sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Instalación-y-configuración"

\end_inset

.
 Bastará con escribir un mensaje, guardar el fichero y cerrar el editor.
 La salida de la orden será algo como
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "15cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git commit 
\end_layout

\begin_layout Plain Layout

\family typewriter
[master c6733d0] + Subo Readme.txt 
\end_layout

\begin_layout Plain Layout

\family typewriter
1 file changed, 1 insertion(+), 1 deletion(-) 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Esta salida nos está indicando que hemos añadido nuestro fichero a la rama
 
\family typewriter
master
\family default
, la suma SHA-1 del 
\emph on
commit
\emph default
, el número de ficheros modificados y también el número de líneas de código
 añadidas y eliminadas.
\end_layout

\begin_layout Standard
También es posible hacer un 
\emph on
commit 
\emph default
usando el flag 
\family typewriter
-m 
\begin_inset Quotes eld
\end_inset

Mensaje
\begin_inset Quotes erd
\end_inset


\family default
.
\end_layout

\begin_layout Subsubsection

\emph on
Commits
\emph default
 
\begin_inset Quotes eld
\end_inset

rápidos
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Aunque es muy útil saber exactamente qué vamos a subir al repositorio, a
 veces lo único que hace falta es subir todo lo que haya en el directorio
 de trabajo y que no deba ignorarse.
 
\end_layout

\begin_layout Standard
Es posible saltarnos el uso de 
\family typewriter
git add
\family default
 y hacer directamente el 
\emph on
commit
\emph default
 con todo proporcionándole el flag 
\family typewriter
-a
\family default
 al comando 
\family typewriter
git commit
\family default
.
\end_layout

\begin_layout Subsubsection
Borrando ficheros del repositorio
\end_layout

\begin_layout Standard
Para eliminar un fichero del repositorio, basta con utilizar la orden 
\family typewriter
git rm
\family default
.
 Esta orden también eliminará el fichero del directorio de trabajo.
\end_layout

\begin_layout Standard
Por seguridad, si el fichero vuelve a crearse y a registrarse, no se borrará
 al hacer un 
\emph on
commit
\emph default
.
 Para forzar el borrado en estos casos, es necesario proporcionar el flag
 
\family typewriter
-f
\family default
 a la orden 
\family typewriter
git rm
\family default
.
\end_layout

\begin_layout Standard
Por otra parte, resulta interesante eliminar un fichero del repositorio
 y mantenerlo en el directorio de trabajo.
 Para conseguir esto, basta con utilizar la orden
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
$ git rm --cached <fichero>
\end_layout

\begin_layout Standard
La orden 
\family typewriter
git rm
\family default
 puede recibir como argumento rutas de ficheros, directorios y patrones
 glob que hagan referencia a ficheros.
 En caso de utilizar patrones glob, es importante notar que todos los asteriscos
 deben ir precedidos por 
\family typewriter

\backslash

\family default
 (para evitar la expansión de nombres que ya utiliza Git).
\end_layout

\begin_layout Subsubsection
Moviendo y renombrando ficheros
\end_layout

\begin_layout Standard
En principio, si se renombra uno de los ficheros del repositorio, no habrá
 metadatos que se lo indiquen a Git.
 Para evitar problemas, es preferible utilizar la orden 
\family typewriter
git mv
\family default
.
 Su sintaxis es
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "10cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ git mv <ruta fichero fuente> <ruta fichero destino>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Naturalmente, esto también puede hacerse a mano.
 La orden anterior equivale a
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "10cm"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
$ mv <ruta fichero fuente> <ruta fichero destino>
\end_layout

\begin_layout Plain Layout

\family typewriter
$ git rm <ruta fichero fuente>
\end_layout

\begin_layout Plain Layout

\family typewriter
$ git add <ruta fichero destino>
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Revisar cambios en el repositorio
\end_layout

\begin_layout Standard
Ahora que hemos hecho nuestros primeros 
\emph on
commits
\emph default
, podemos consultar como se ha modificado el repositorio.
 Para ello, utilizaremos la orden 
\family typewriter
git log
\family default
.
 Al ejecutarla en nuestro repositorio, obtenemos esta salida:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "11cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git log 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
commit bdd9360b437b8a38cf866879f731ae568309aefd
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
Author:
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Luis Barrios <luisbarrioshdez@gmail.com> 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
Date:
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 Fri Sep 14 19:49:57 2012 +0200
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Plantillas de la documentación revisadas 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como podemos ver, aparecen las 
\emph on
checksums
\emph default
 SHA-1, el nombre y el correo del autor, la fecha y el mensaje de cada 
\emph on
commit
\emph default
.
 
\end_layout

\begin_layout Standard
Evidentemente, es posible alterar este comportamiento cambiando los argumentos
 de la orden.
 Algunos muy útiles aparecen en el cuadro 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Argumentos-más-útiles-git-log"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="13" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Flag
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Descripción de la salida
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-p
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Muestra los cambios introducidos en los 
\emph on
commits
\emph default
 (vía 
\family typewriter
diff
\family default
) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
--stat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Muestra abreviadamente los cambios introducidos en los 
\emph on
commits
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Restringe la salida a los últimos 
\family typewriter
n
\family default
 
\emph on
commits
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
--relative-date
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Usa fechas relativas (i.e.
 
\family typewriter
10 days ago
\family default
)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
--since=<fecha>, --after=<fecha>
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Muestra los 
\emph on
commits
\emph default
 realizados desde la fecha 
\family typewriter
<fecha>
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Las fechas pueden ser específicas (
\family typewriter

\begin_inset Quotes eld
\end_inset

2012-09-14
\begin_inset Quotes erd
\end_inset


\family default
)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
o relativas (
\family typewriter
2.years.1.week.10.hours
\family default
)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
--until=<fecha>, --before=<fecha>
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Muestra los 
\emph on
commits
\emph default
 realizados hasta la fecha 
\family typewriter
<fecha>
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Las fechas pueden ser específicas (
\family typewriter

\begin_inset Quotes eld
\end_inset

2012-09-14
\begin_inset Quotes erd
\end_inset


\family default
)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
o relativas (
\family typewriter
3.weeks.10.hours
\family default
)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
--author
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Muestra los 
\emph on
commits
\emph default
 con la entrada 
\family typewriter
author
\family default
 especificada.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
--committer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Muestra los 
\emph on
commits
\emph default
 con la entrada 
\family typewriter
committer
\family default
 especificada.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Argumentos-más-útiles-git-log"

\end_inset

Argumentos muy útiles de 
\family typewriter
git log
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Uso de 
\family typewriter
gitk
\end_layout

\begin_layout Standard
También es posible examinar los cambios que se han producido en el repositorio
 en una interfaz gráfica usando la orden 
\family typewriter
gitk
\family default
, que admite prácticamente las mismas opciones que 
\family typewriter
git log
\family default
.
 La figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:La-GUI-gitk"

\end_inset

 recoge una captura de pantalla.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Gitk.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:La-GUI-gitk"

\end_inset

La GUI 
\family typewriter
gitk
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Subsection
Deshacer cambios
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\series bold
\color red
Importante
\series default
\color inherit
: 
\emph on
no
\emph default
 todos los procedimientos que se describen en esta sección son reversibles
 por lo que es necesario tener mucho cuidado a la hora de realizarlos.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Cambiar el último 
\emph on
commit
\end_layout

\begin_layout Standard
Como ya hemos visto, no todos los ficheros que se encuentran en el directorio
 de trabajo se subirán al repositorio al hacer un 
\emph on
commit
\emph default
: sólo se subirán aquellos ficheros que se encuentren en estado 
\emph on
staged
\emph default
.
 Se dice que todos estos ficheros forman parte de la 
\emph on
staging area
\emph default
.
\end_layout

\begin_layout Standard
Para añadir más ficheros al último 
\emph on
commit
\emph default
 o cambiar el mensaje, se utiliza la orden
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
git commit --amend
\end_layout

\begin_layout Subsubsection
Eliminar un fichero en estado 
\emph on
staged
\end_layout

\begin_layout Standard
Para dejar este apartado lo suficientemente claro, incluiremos un ejemplo.
 Empezamos añadiendo el fichero 
\family typewriter
basura.txt
\family default
 al directorio de trabajo.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "14cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ touch basura.txt 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ahora, añadiremos todos los ficheros a la 
\emph on
staging area
\emph default
.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "14cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git add .
 luis@luis-laptop:~/cygnus-cloud$ git status 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
# On branch master 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
# Changes to be committed: 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(use "git reset HEAD <file>..." to unstage) 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
# 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

new file: basura.txt 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
# 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Sin embargo, no
\emph default
 queremos incluir el fichero 
\family typewriter
basura.txt
\family default
 en nuestro 
\emph on
commit
\emph default
.
 Para eliminarlo de la 
\emph on
staging area
\emph default
, la propia orden 
\family typewriter
git status
\family default
 nos indica que podemos hacer.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "14cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git reset HEAD basura.txt
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git status 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
# On branch master 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
# Untracked files: 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(use "git add <file>..." to include in what will be committed) 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
# 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

basura.txt
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
nothing added to commit but untracked files present (use "git add" to track)
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Deshacer los cambios en un fichero
\end_layout

\begin_layout Standard
Aquí también utilizaremos un ejemplo.
 Empezaremos escribiendo algo en nuestro fichero 
\family typewriter
en_blanco.txt
\family default
.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "14.5cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ echo 
\begin_inset Quotes eld
\end_inset

foo
\begin_inset Quotes erd
\end_inset

 > en_blanco.txt 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Queremos dejar el fichero 
\family typewriter
en_blanco.txt
\family default
 vacío, tal y como estaba en nuestro último 
\emph on
commit
\emph default
.
 La orden 
\family typewriter
git status
\family default
 también nos indica cómo hacerlo.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "14.5cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git status 
\end_layout

\begin_layout Plain Layout

\family typewriter
# On branch master 
\end_layout

\begin_layout Plain Layout

\family typewriter
# Changes not staged for commit: 
\end_layout

\begin_layout Plain Layout

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(use "git add <file>..." to update what will be committed) 
\end_layout

\begin_layout Plain Layout

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(use "git checkout -- <file>..." to discard changes in working directory) 
\end_layout

\begin_layout Plain Layout

\family typewriter
# 
\end_layout

\begin_layout Plain Layout

\family typewriter
#
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

modified: en_blanco.txt 
\end_layout

\begin_layout Plain Layout

\family typewriter
# 
\end_layout

\begin_layout Plain Layout

\family typewriter
no changes added to commit (use "git add" and/or "git commit -a") 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ejecutando la orden 
\family typewriter
git checkout
\family default
, la cosa queda así:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "14.5cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git checkout -- en_blanco.txt
\end_layout

\begin_layout Plain Layout

\family typewriter
luis@luis-laptop:~/cygnus-cloud$ git status 
\end_layout

\begin_layout Plain Layout

\family typewriter
# On branch master 
\end_layout

\begin_layout Plain Layout

\family typewriter
nothing to commit (working directory clean) 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Uso de repositorios remotos
\end_layout

\begin_layout Standard
Un repositorio remoto no es más que un repositorio git alojado en otra máquina.
 Para mostrar los repositorios remotos que estamos utilizando, es posible
 utilizar la orden 
\family typewriter
git remote
\family default
.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "10cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ git remote
\end_layout

\begin_layout Plain Layout

\family typewriter
origin
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El 
\emph on
flag
\emph default
 
\family typewriter
-v
\family default
 muestra también la URL de cada repositorio remoto.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "10cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ git remote -v
\end_layout

\begin_layout Plain Layout

\family typewriter
origin https://code.google.com/p/cygnus-cloud/ (fetch)
\end_layout

\begin_layout Plain Layout

\family typewriter
origin https://code.google.com/p/cygnus-cloud/ (push) 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En principio, no es necesario añadir repositorios remotos para empezar a
 trabajar.
 Para hacerlo, basta con utilizar la orden 
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
git remote add [nombre-del-repositorio] [url]
\end_layout

\begin_layout Subsubsection
Incorporar los cambios de un repositorio remoto al repositorio local
\end_layout

\begin_layout Standard
Para añadir al directorio de trabajo todos los cambios que se han producido
 en un repositorio remoto, basta con utilizar la orden
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
git fetch [nombre-del-repositorio]
\end_layout

\begin_layout Standard
Cuando se clona un repositorio, el repositorio clonado pasa a llamarse 
\family typewriter
origin
\family default
.
 Como hemos clonado el repositorio de Google Code, 
\family typewriter
git fetch origin
\family default
 añadirá todos los cambios del repositorio de Google Code al repositorio
 local.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\series bold
\color red
Importante:
\series default
\color inherit
 la orden 
\family typewriter
git fetch
\family default
 
\emph on
no
\emph default
 mezcla el contenido del repositorio local y del repositorio remoto.
 Esa mezcla 
\emph on
debe
\emph default
 hacerse a mano.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El uso directo de 
\family typewriter
git fetch
\family default
 resulta bastante engorroso.
 La situación más habitual es esta:
\end_layout

\begin_layout Itemize
en el repositorio remoto existen varias ramas o 
\emph on
branches
\emph default
, y
\end_layout

\begin_layout Itemize
nos interesa el contenido de 
\emph on
una
\emph default
 de esas ramas.
 Por ejemplo, una rama con código experimental no es interesante, mientras
 que la rama 
\family typewriter
master
\family default
, que contiene el código estable, sí lo es.
\end_layout

\begin_layout Standard
En estos casos, lo que se hace es utilizar la orden 
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
git pull [nombre-del-repositorio] [nombre-de-la-rama]
\end_layout

\begin_layout Standard
Esta orden toma los datos de la rama especificada y trata de mezclarlos
 con lo que hay en el directorio de trabajo.
 Si hay conflictos, tendremos que resolverlos a mano.
\end_layout

\begin_layout Subsubsection
Incorporar los cambios del repositorio local a un repositorio remoto
\end_layout

\begin_layout Standard
En esta sección aprenderemos a subir cosas al repositorio en Google Code.
 El comando que hay que utilizar es
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
git push [nombre-del-repositorio] [nombre-de-la-rama]
\end_layout

\begin_layout Standard
Por ejemplo, si queremos subir los cambios en la rama master a Google Code,
 basta con ejecutar 
\family typewriter
git push origin master
\family default
.
 
\end_layout

\begin_layout Standard
Solamente es posible subir cosas a un repositorio remoto cuando se dispone
 de la última versión de sus datos.
 Esto ya ocurre en otros sistemas de control de versiones, como SVN.
\end_layout

\begin_layout Subsubsection
Renombrar y eliminar repositorios remotos
\end_layout

\begin_layout Standard
Para cambiar el nombre de un repositorio remoto, basta con utilizar la orden
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
git remote rename [nombre-del-repositorio] [nuevo-nombre-del-repositorio]
\end_layout

\begin_layout Standard
Para eliminar un repositorio remoto, basta con utilizar la orden
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
git remote rm [nombre-del-repositorio]
\end_layout

\begin_layout Subsection
Uso de etiquetas
\end_layout

\begin_layout Standard
Las etiquetas son sólo formas de marcar puntos importantes de la historia.
 Lo más habitual es que se correspondan con versiones.
\end_layout

\begin_layout Subsubsection
Crear etiquetas
\end_layout

\begin_layout Standard
En Git existen dos clases de etiquetas: ligeras (
\emph on
lightweight
\emph default
) y anotadas (
\emph on
annotated
\emph default
).
 Las primeras no son más que el 
\emph on
checksum
\emph default
 de un 
\emph on
commit
\emph default
, mientras que las segundas almacenan más información, como un mensaje y
 una fecha.
\end_layout

\begin_layout Standard
Para crear una etiqueta anotada, basta con utilizar la orden 
\family typewriter
git tag -a
\family default
.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "13cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ git tag -a PlantillasV3 -m 'Plantillas de la documentación' 
\end_layout

\begin_layout Plain Layout

\family typewriter
$ git tag 
\end_layout

\begin_layout Plain Layout

\family typewriter
PlantillasV3 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para visualizar el contenido asociado a una etiqueta anotada, se utiliza
 la orden 
\family typewriter
git show
\family default
.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "13cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ git show PlantillasV3 
\end_layout

\begin_layout Plain Layout

\family typewriter
tag PlantillasV3 
\end_layout

\begin_layout Plain Layout

\family typewriter
Tagger: Luis Barrios <luisbarrioshdez@gmail.com> 
\end_layout

\begin_layout Plain Layout

\family typewriter
Date: 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Mon Sep 24 18:17:22 2012 +0200
\end_layout

\begin_layout Plain Layout

\family typewriter
Plantillas de la documentación
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para crear una etiqueta ligera, basta con no proporcionar ningún 
\emph on
flag
\emph default
 (es decir, sólo el nombre de la etiqueta) a la orden 
\family typewriter
git tag
\family default
.
\end_layout

\begin_layout Standard
Con lo que hemos visto hasta ahora, sólo es posible asociar etiquetas al
 último 
\emph on
commit
\emph default
.
 Para asociar las etiquetas a un 
\emph on
commit
\emph default
 anterior, basta con proporcionar el 
\emph on
checksum
\emph default
 o una parte del 
\emph on
checksum
\emph default
 de ese 
\emph on
commit
\emph default
 como último argumento de la orden 
\family typewriter
git tag
\family default
.
\end_layout

\begin_layout Subsubsection
Compartir etiquetas
\end_layout

\begin_layout Standard
De forma predeterminada, el comando git push 
\emph on
no
\emph default
 transfiere las etiquetas a los repositorios remotos, por lo que habrá que
 hacerlo de forma explícita.
 Para ello, basta con utilizar la orden
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
git push [nombre-del-repositorio] [nombre-de-la-etiqueta]
\end_layout

\begin_layout Standard
Para transferir todas las etiquetas definidas al repositorio remoto, es
 posible utilizar la orden
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
git push --tags
\end_layout

\begin_layout Standard
para no hacerlo etiqueta a etiqueta.
\end_layout

\begin_layout Section
Uso de ramas o 
\emph on
branches
\end_layout

\begin_layout Subsection
¿Qué es una rama?
\end_layout

\begin_layout Standard
Para entender exactamente qué es una rama o 
\emph on
branch
\emph default
 y cómo se utilizan en Git hay que tener en cuenta cómo se almacenan los
 datos.
\end_layout

\begin_layout Standard
En la mayoría de sistemas de control de versiones, los datos se almacenan
 como un conjunto de ficheros y de cambios realizados sobre los mismos a
 lo largo del tiempo.
 Esto se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Almacenamiento-datos-resto"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Almacenamiento datos resto.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Almacenamiento-datos-resto"

\end_inset

Almacenamiento de los datos en la mayoría de sistemas de control de versiones
 (CVS, SVN, Bazaar,\SpecialChar \ldots{}
)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
En cambio, Git almacena los datos como un conjunto de instantáneas de un
 mismo 
\begin_inset Quotes eld
\end_inset

sistema de ficheros
\begin_inset Quotes erd
\end_inset

.
 Cada vez que se realiza un 
\emph on
commit
\emph default
, Git almacena el 
\begin_inset Quotes eld
\end_inset

estado
\begin_inset Quotes erd
\end_inset

 de esos ficheros en una instantánea junto con un puntero a la misma.
 Por eficiencia, si un fichero no ha cambiado, solamente se almacena un
 enlace a la versión que ya estaba almacenada.
 Esto aparece en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Almacenamiento-Git"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Almacenamiento datos Git.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Almacenamiento-Git"

\end_inset

Almacenamiento de los datos en Git
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Al hacer un 
\emph on
commit
\emph default
 no solamente se almacena un puntero a la instantánea: también se almacenan
 metadatos (como el autor y el mensaje) y uno o más punteros a los 
\emph on
commits
\emph default
 padre.
 Así, 
\end_layout

\begin_layout Itemize
el primer 
\emph on
commit
\emph default
 no tendrá ningún puntero a su padre.
\end_layout

\begin_layout Itemize
los 
\emph on
commits
\emph default
 
\begin_inset Quotes eld
\end_inset

normales
\begin_inset Quotes erd
\end_inset

 tienen un puntero a su padre.
\end_layout

\begin_layout Itemize
los 
\emph on
commits
\emph default
 que resultan de mezclar dos o más ramas tienen varios punteros.
\end_layout

\begin_layout Standard
Con el fin de asentar estas ideas, utilizaremos un ejemplo.
 Supongamos que ejecutamos las órdenes
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "13cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ git add README test.rb LICENSE 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
$ git commit -m 'initial commit of my project'
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tras el 
\emph on
commit
\emph default
, los datos del repositorio se organizan de acuerdo a la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Organización-datos-ejemplo"

\end_inset

.
 Los 
\emph on
blobs
\emph default
 no son más que las versiones de los distintos ficheros.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Ejemplo commit.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Organización-datos-ejemplo"

\end_inset

Organización de los datos tras un 
\emph on
commit
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si introducimos cambios y hacemos otro 
\emph on
commit
\emph default
, este almacenará un puntero a su 
\emph on
commit
\emph default
 padre.
 Tras dos 
\emph on
commits
\emph default
 más, la historia sería como la de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Historia-tras-dos-commits"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Historia tras dos commits.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Historia-tras-dos-commits"

\end_inset

Historia tras dos
\emph on
 commits
\emph default
 más
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una rama es un puntero a un 
\emph on
commit
\emph default
.
 La rama por defecto, que ha aparecido ya en todos nuestros 
\emph on
commits
\emph default
, se llama 
\family typewriter
master
\family default
.
 
\end_layout

\begin_layout Standard
Cada vez que realizamos un 
\emph on
commit
\emph default
, se parte de una rama principal que apunta a nuestro último 
\emph on
commit
\emph default
.
 Tras cada 
\emph on
commit
\emph default
, este puntero avanzará automáticamente.
 Esto se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Branches-y-commits"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Branches y commits.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
\begin_inset CommandInset label
LatexCommand label
name "fig:Branches-y-commits"

\end_inset

Branches
\emph default
 y 
\emph on
commits
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Uso básico de ramas
\end_layout

\begin_layout Standard
Para crear una rama, se utiliza el comando 
\family typewriter
git branch
\family default
.
 Si ejecutamos el comando
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "8cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ git branch testing
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Se creará un nuevo puntero al último 
\emph on
commit
\emph default
.
 Esto aparece en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Creación-nueva-rama"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Creación nueva rama.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Creación-nueva-rama"

\end_inset

Creación de una nueva rama
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Git averigua la rama que hay que utilizar manteniendo un puntero especial,
 
\family typewriter
HEAD
\family default
, que apunta a la rama 
\emph on
local
\emph default
 en la que se está trabajando.
\end_layout

\begin_layout Standard
El comando 
\family typewriter
git branch
\family default
 
\emph on
solamente
\emph default
 crea una rama, pero 
\emph on
no
\emph default
 cambia de rama.
 Para utilizar una rama ya existente, se utiliza el comando 
\family typewriter
git checkout
\family default
.
 Si ejecutamos la orden
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "8cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ git checkout testing
\end_layout

\end_inset


\end_layout

\begin_layout Standard
la situación será la de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Situación-tras-ejecutar-checkout"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Situación tras ejecutar checkout.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Situación-tras-ejecutar-checkout"

\end_inset

Situación tras ejecutar 
\family typewriter
git checkout testing
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si hacemos otro 
\emph on
commit
\emph default
,
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "8cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ echo 
\begin_inset Quotes eld
\end_inset

foo
\begin_inset Quotes erd
\end_inset

 >> LICENSE
\end_layout

\begin_layout Plain Layout

\family typewriter
$ git commit -a -m 'Cambio en LICENSE'
\end_layout

\end_inset


\end_layout

\begin_layout Standard
la situación pasa a ser la de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Commit-en-testing"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Commit en testing.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Commit-en-testing"

\end_inset


\emph on
Commit
\emph default
 en la rama 
\emph on
testing
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Mientras que la rama 
\family typewriter
testing
\family default
\emph on
 
\emph default
ha avanzado, 
\family typewriter
master
\family default
 sigue apuntando al mismo 
\emph on
commit
\emph default
.
 Si ahora ejecutamos 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "8cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ git checkout master
\end_layout

\end_inset


\end_layout

\begin_layout Standard
se habrán deshecho todos los cambios.
 Es decir, cada rama tiene asociada su propia historia.
 
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\series bold
\color red
Importante
\series default
\color inherit
: para evitar problemas, es muy recomendable cambiar de rama 
\emph on
después
\emph default
 de realizar un 
\emph on
commit
\emph default
.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las ramas son muy útiles para hacer cambios de forma controlada, pero tarde
 o temprano esos cambios deberán incorporarse a la rama 
\family typewriter
master
\family default
.
 Para incorporar los cambios de una rama a otra se utiliza la orden 
\family typewriter
git merge
\family default
.
 Así, los comandos 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "8cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ git checkout master
\end_layout

\begin_layout Plain Layout

\family typewriter
$ git merge testing
\end_layout

\end_inset


\end_layout

\begin_layout Standard
incorporan todos los cambios de la rama testing a la rama master.
 Dado que el último 
\emph on
commit
\emph default
 de master no tiene por qué ser el padre del último 
\emph on
commit
\emph default
 de testing
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Cuando esto sucede, Git se limita a mover el puntero de la rama a la que
 se incorporan los cambios (
\family typewriter
Fast forward
\family default
)
\end_layout

\end_inset

, Git deberá trabajar algo más.
 En cualquier caso, los conflictos que aparezcan deberán resolverse a mano.
\end_layout

\begin_layout Standard
Finalmente, las ramas se borran proporcionando el flag 
\family typewriter
-d
\family default
 a la orden 
\family typewriter
git branch
\family default
.
 Así, el comando
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "8cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ git branch -d testing
\end_layout

\end_inset


\end_layout

\begin_layout Standard
eliminará la rama 
\family typewriter
testing
\family default
.
\end_layout

\begin_layout Subsubsection
Resolución de conflictos
\end_layout

\begin_layout Standard
En algunos casos, mezclar ramas no es trivial.
 Si se ha modificado el mismo fragmento del mismo fichero en las dos ramas
 que se están mezclando, aparecerá un conflicto.
 Por ejemplo, si tenemos dos ficheros 
\family typewriter
foo.xml
\family default
 en la raíz del directorio, el último 
\emph on
commit 
\emph default
de 
\family typewriter
master
\family default
 no es el ancestro del de 
\family typewriter
testing
\family default
 y su contenido es 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "6cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
<foo>
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

foo
\end_layout

\begin_layout Plain Layout

\family typewriter
</foo>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
y
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "6cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
<foo>
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

moo
\end_layout

\begin_layout Plain Layout

\family typewriter
</foo>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Esto producirá un conflicto.
\end_layout

\begin_layout Standard
Cuando aparece un conflicto, no se crea el 
\emph on
commit
\emph default
 de la mezcla: la mezcla se pausa hasta que se resuelve manualmente el conflicto.
 
\end_layout

\begin_layout Standard
Para resolver conflictos: 
\end_layout

\begin_layout Enumerate
Se modifican los fragmentos correspondientes en un editor (escogiendo una
 alternativa y quitando las líneas 
\family typewriter
<<<<<<<
\family default
, 
\family typewriter
=======
\family default
 y 
\family typewriter
>>>>>>>
\family default
).
\end_layout

\begin_layout Enumerate
Se ejecuta el comando 
\family typewriter
git add
\family default
 sobre los dos ficheros para marcar el conflicto como resuelto.
\end_layout

\begin_layout Enumerate
Se realiza un 
\emph on
commit
\emph default
.
\end_layout

\begin_layout Subsection
Gestión de ramas
\end_layout

\begin_layout Standard
El comando 
\family typewriter
git branch
\family default
 hace algo más que crear y borrar ramas.
 Si se ejecuta sin argumentos, lista las ramas existentes.
 El nombre de la rama en la que se está trabajando va precedido por el carácter
 
\family typewriter
*
\family default
.
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "8cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\family typewriter
$ git branch 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
* master 
\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

testing
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para determinar cuál es el último 
\emph on
commit
\emph default
 realizado en cada rama, es posible utilizar el comando 
\family typewriter
git branch -v
\family default
.
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "8cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
$ git branch -v 
\end_layout

\begin_layout Plain Layout

\family typewriter
* master 
\begin_inset space ~
\end_inset

20aaf1c Otro commit más 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

testing 81f2925 Commit de prueba
\end_layout

\end_inset


\end_layout

\begin_layout Standard
También es útil saber qué ramas se han mezclado con la actual y cuáles no.
 Para ello, se utilizan los comandos 
\family typewriter
git branch --merged
\family default
 y 
\family typewriter
git branch --no-merged
\family default
.
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "8cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
$ git branch --merged 
\end_layout

\begin_layout Plain Layout

\family typewriter
* master 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

testing 
\end_layout

\begin_layout Plain Layout

\family typewriter
$ git branch --no-merged 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

foo
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ramas remotas
\end_layout

\begin_layout Standard
Las ramas remotas son ramas locales que no se pueden modificar.
 Las modificaciones en estas ramas se realizan intercambiando datos a través
 de redes, y sus nombres son de la forma 
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
(repositorio remoto)/(rama)
\end_layout

\begin_layout Standard
Así, la rama 
\family typewriter
master
\family default
 del repositorio de Google Code es 
\family typewriter
origin/master
\family default
.
\end_layout

\begin_layout Subsubsection
Acceso a ramas remotas
\end_layout

\begin_layout Standard
Para incorporar los cambios en las ramas remotas al directorio de trabajo,
 basta con ejecutar la orden
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
$ git fetch origin
\end_layout

\begin_layout Standard
Con esto, descargaremos todos los cambios en el repositorio de Google Code
 a nuestro directorio de trabajo.
\end_layout

\begin_layout Subsubsection
Crear ramas remotas
\end_layout

\begin_layout Standard
Para compartir una rama, hay que registrarlas en el repositorio remoto de
 Google Code.
 Las ramas locales no se sincronizan automáticamente con las remotas, por
 lo que hay que registrarlas manualmente.
\end_layout

\begin_layout Standard
Para crear una rama remota, basta con ejecutar la orden
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
$ git push (repositorio remoto) (rama)
\end_layout

\begin_layout Standard
Es importante notar que, tras leer los datos de una rama remota, no se dispone
 de una copia local editable.
 Por ejemplo, tras ejecutar las órdenes
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "7cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
$ git push origin foo
\end_layout

\begin_layout Plain Layout

\family typewriter
$ git fetch origin
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
no
\emph default
 existirá la nueva rama 
\family typewriter
foo
\family default
: sólo existirá el puntero 
\family typewriter
origin/foo
\family default
, que 
\emph on
no
\emph default
 podrá modificarse.
 La copia editable se obtiene mezclando esta rama con la actual, es decir,
 ejecutando la orden
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "7cm"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
$ git merge origin/foo
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\emph on
Tracking branches
\end_layout

\begin_layout Standard
Las 
\emph on
tracking branches
\emph default
 son ramas locales creadas a partir de una rama remota, es decir, ramas
 locales que tienen una relación directa con una rama remota.
 Así, al trabajar con una de estas ramas, Git sabe dónde subir los cambios
 al ejecutar la orden 
\family typewriter
git push
\family default
, y de dónde obtener datos al ejecutar la orden 
\family typewriter
git pull
\family default
.
 
\end_layout

\begin_layout Standard
Al clonar un repositorio, siempre se crea una 
\emph on
tracking branch
\emph default
, 
\family typewriter
master
\family default
, relacionada con la rama 
\family typewriter
origin/master
\family default
.
 Esa es la razón por la que 
\family typewriter
git push
\family default
 y 
\family typewriter
git pull
\family default
 funcionan sin argumentos.
\end_layout

\begin_layout Standard
Naturalmente, estas ramas también pueden crearse a mano, mediante la orden
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
$ git checkout --track (repositorio remoto)/(rama)
\end_layout

\begin_layout Subsubsection
Borrar ramas remotas
\end_layout

\begin_layout Standard
Para borrar una rama remota, basta con utilizar la orden
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
$ git push (repositorio remoto) :(rama)
\end_layout

\begin_layout Subsection
Uso de 
\family typewriter
rebase
\end_layout

\begin_layout Standard
En Git, existen dos formas de integrar los cambios de una rama en otra:
 
\family typewriter
merge
\family default
 y 
\family typewriter
rebase
\family default
.
 En esta sección, presentaremos el uso básico de la segunda.
\end_layout

\begin_layout Subsubsection
Uso básico
\end_layout

\begin_layout Standard
Supongamos la situación de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Situación-inicial-rebase"

\end_inset

, en la que existen dos 
\emph on
commits
\emph default
 en dos ramas diferentes.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Situación inicial rebase.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Situación-inicial-rebase"

\end_inset

Situación inicial (antes de utilizar 
\family typewriter
rebase
\family default
)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
La forma más sencilla de integrar los cambios de las dos ramas es utilizando
 el comando 
\family typewriter
merge
\family default
.
 La situación pasaría a ser la de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Integrando-cambios-merge"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Integración cambios merge.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Integrando-cambios-merge"

\end_inset

Integrando los cambios con 
\family typewriter
merge
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pero existe una alternativa: podemos tomar los cambios del 
\emph on
commit
\emph default
 
\family typewriter
C3
\family default
 y aplicarlos sobre el 
\emph on
commit
\emph default
 
\family typewriter
C4
\family default
.
 Esto se llama 
\emph on
rebasing
\emph default
.
 Así, el comando 
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
$ git rebase master
\end_layout

\begin_layout Standard
tomará todos los cambios introducidos en los 
\emph on
commits
\emph default
 de 
\family typewriter
experiment
\family default
 y los aplicará sobre 
\family typewriter
master
\family default
.
 La situación pasará a ser la de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Integrando-cambios-rebase"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Integración cambios rebase.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Integrando-cambios-rebase"

\end_inset

Integrando los cambios con 
\family typewriter
rebase
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si bien el resultado final es el mismo, al usar 
\family typewriter
rebase
\family default
 en este caso la historia pasa a ser lineal y los 
\emph on
commits
\emph default
 cambian.
\end_layout

\begin_layout Subsubsection
Un caso interesante
\end_layout

\begin_layout Standard
Supongamos la situación de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Uso-útil-rebase-partida"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Uso útil rebase inicial.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Uso-útil-rebase-partida"

\end_inset

Uso útil de 
\family typewriter
rebase
\family default
.
 Situación de partida.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para mezclar las ramas 
\family typewriter
client
\family default
 y 
\family typewriter
master
\family default
, dejando de lado los cambios en la rama 
\family typewriter
server
\family default
, se utiliza la opción 
\family typewriter
--onto
\family default
 del comando 
\family typewriter
git rebase
\family default
.
 Así, el comando
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
$ git rebase --onto master server client
\end_layout

\begin_layout Standard
indicará a Git que hay que
\end_layout

\begin_layout Enumerate
tomar los cambios de la rama 
\family typewriter
client
\end_layout

\begin_layout Enumerate
determinar qué cambios hay que introducir en el ancestro común de 
\family typewriter
client
\family default
 y 
\family typewriter
serve
\family default
r
\end_layout

\begin_layout Enumerate
aplicar esos cambios en la rama 
\family typewriter
master
\end_layout

\begin_layout Standard
El resultado, que aparece en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Uso-útil-rebase-resultado"

\end_inset

, es bastante interesante.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Uso útil rebase resultado.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Uso-útil-rebase-resultado"

\end_inset

Uso útil de 
\family typewriter
rebase
\family default
.
 Resultado obtenido.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Por otra parte hay que tener claro que, al utilizar 
\family typewriter
rebase
\family default
, se borran los 
\emph on
commits
\emph default
 existentes y se crean nuevos 
\emph on
commits
\emph default
 que son parecidos, pero 
\emph on
no
\emph default
 exactamente iguales.
 Para evitar que se mezclen esos 
\emph on
commits
\emph default
 
\begin_inset Quotes eld
\end_inset

antiguos
\begin_inset Quotes erd
\end_inset

 con los 
\begin_inset Quotes eld
\end_inset

nuevos
\begin_inset Quotes erd
\end_inset

 y evitar posibles errores graves, 
\color black
nunca se debe utilizar rebase para modificar commits que se encuentran registrad
os en un repositorio remoto
\color inherit
.
\end_layout

\end_body
\end_document
