#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass memoir
\use_default_options true
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Virtualización
\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
En este capítulo veremos como puede ser virtualizado un sistema, que alternativa
s hay y cuales han sido las seleccionadas para el proyecto.
 Empezaremos cuales son los distintos tipos de virtualizacion que podemos
 encontrarnos, como funcionan cada uno de ellos.
\end_layout

\begin_layout Standard
La virtualización permite tener varios sistemas en la misma máquina, aislados
 unos de otros, y gracias a que esos sistemas pueden estar en un único archivo,
 podríamos cambiar alguno de ellos a otra máquina o hacer una copia de seguridad
 de forma rápida y sencilla, solo habría que copiar ese archivo al nuevo
 servidor o a un dispositivo de almacenamiento.
\end_layout

\begin_layout Section
Historia
\end_layout

\begin_layout Standard
La virtualización, aunque pueda parecerlo, no es nueva, ya se usaba en la
 decada de 1960.
 IBM implementó unas particiones lógicas sobre los recursos de los mainframes
 para poder usar su gran capacidad de cálculo.
 Con se podían tener terminales independientes corriendo en la misma máquina.
 
\end_layout

\begin_layout Standard
A raíz de que se popularizaron la arquitectura x86, se popularizo el uso
 de computadoras personales, con lo que la virtualización quedo relegada.
 A partir de que el hardware estuviese mas desaprovechado en las maquinas
 personales, se volvió al uso de la virtualización, sobre todo en empresa,
 ya que les resultaba mas rentable tener un solo ordenador dedicado, con
 terminales de baje coste.
\end_layout

\begin_layout Section
Distintos esquemas de virtualización
\end_layout

\begin_layout Standard
El tipo de virtualización depende de como quién gestiona los recursos de
 la máquina y como se comunica el sistema virtualizado con esos recursos.
\end_layout

\begin_layout Subsection
Virtualizacion de hardware
\end_layout

\begin_layout Standard
En lo que se basa es en que sobre el hardware de la maquina se simula el
 hardware mediante maquinas virtuales, para luego poder ejecutar el sistema.
 El gran inconveniente de este esquema es que las instrucciones de la maquina
 virtualizada debe traducirse a instrucciones de la maquina 
\emph on
host
\emph default
, lo que requiere mucho tiempo.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename graficos/Virtualizacion/hardware.png

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Virtualización hardware
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Virtualización de software
\end_layout

\begin_layout Standard
En este esquema se utiliza un software para simular el ordenador, una maquina
 virtual, este debe ejecutarse sobre un sistema operativo concreto, que
 es el que tiene acceso al hardware y hace de intermediario entre este y
 la máquina virtual.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename graficos/Virtualizacion/software.png

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Virtualización software
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El mayor inconveniente de este esquema es que, como debe haber un sistema
 operativo ejecutandose, consume algunos de los recursos de la máquina.
\end_layout

\begin_layout Subsection
Paravirtualización
\end_layout

\begin_layout Standard
En este esquema, al contrario que en el anterior, no es necesario de un
 sistema host para gestionar los recursos, sino que lo que se usa es una
 capa de virtualización, tambien llamada hipervisor, que es la que gestiona
 los recursos.
 Pero no basta con eso, sino que debe haber una comunicación entre el sistema
 guest y el hipervisor.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename graficos/Virtualizacion/paravirtualizacion.png

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Paravirtualización
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Esa comunicación de debe a que en los procesadores hay varios niveles de
 privilegios, llamados 
\emph on
ring
\emph default
, en concreto tienen 4 niveles, de ellos el 0 está reservado para el 
\emph on
kernel
\emph default
 del sistema operativo.
 Por lo que para que se pueda ejecutar el hipervisor, habría que modificar
 el kernel para que se ejecutase en el nivel 1 y dejar el 0 para el hipervisor.
 Esto no es ningún problema para sistemas operativos en los que el código
 fuente esté disponible y modificarlo, como pueden ser 
\emph on
Linux
\emph default
, pero en sistemas privativos como 
\emph on
Microsoft Windows
\emph default
 o 
\emph on
Mac OSX
\emph default
, no es posible hacer este cambio.
\end_layout

\begin_layout Subsection
Virtualización completa
\end_layout

\begin_layout Standard
Este esquema es parecido al anterior, tambien existe el hipervisor, pero
 al contrario que en la paravirtualización, no es necesaria una comunicación.
 Esto es porque en los procesadores que mayor cuota de mercado tiene (Intel
 y AMD) se ha añadido dos modos de ejecución, uno de ellos reservado para
 el hipervisor y el otro mantiene el uso que tenía, es decir, reservando
 el nivel 0 para el kernel, por ello no es necesario modificación alguna
 del sistema 
\emph on
guest
\emph default
.
 Estos modos son VMX para Intel 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
referencia: https://docs.google.com/viewer?a=v&q=cache:QyzbSEBX5oAJ:www.intel.com/de
sign/intarch/papers/316337.pdf+intel+non+root&hl=es&gl=es&pid=bl&srcid=ADGEEShEcj
1AHpkwlMee1bc1fVeScQvctJ3ctVojmlM3gSspHsPQW5CtRmcCWz89g6emcWDxqdZnJx0Z4vIlwOVUMa
Ng6gE8WOMCYV_bVlrunVO1KyRlN9LVqH_Ff4tFJ93_henKhbtt&sig=AHIEtbROTMAEF5Ebld_geP6r9
DR0Y3npCw
\end_layout

\end_inset

 y SVM para AMD
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
referencia: http://developer.amd.com/Resources/documentation/articles/Pages/122120
05112.aspx
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename graficos/Virtualizacion/completa.png

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Virtualización completa
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Software de virtualización
\end_layout

\begin_layout Standard
Existen muchos programas de virtualización para todos los tipos como pueden
 ser VMware en sus distintas versiones, Xen, KVM, VirtualBox\SpecialChar \ldots{}
 Lo que buscamos
 en este proyecto es poder tener sistemas bajo demanda a bajo coste, por
 lo que nos centraremos en evaluar el software libre, open source, freeware,
 con lo queda descartado como opcion VMware y aunque VirtualBox tiene una
 version como software libre, algunas funciones como el soporte USB, está
 bajo una licencia propietario, por lo que también lo descartamos.
 
\end_layout

\begin_layout Standard
Aunque siguen existiendo muchas alternativas bajo las condiciones que queremos,
 nos centramos principalmente en Xen y KVM, por ser los que mayor trayectoría
 tienen.
 Debido a que Xen lleva mas años que KVM y estar apoyado por la comunidad,
 a parte de grandes empresas que apoyan el desarrollo como IBM, Intel, Red
 Hat u Oracle, es la mejor opción que podíamos escoger.
\end_layout

\begin_layout Section
Xen
\end_layout

\begin_layout Standard
Xen permite una virtualización de paravirtualización y virtualización completa
 en los procesadores que lo soporten
\end_layout

\end_body
\end_document
