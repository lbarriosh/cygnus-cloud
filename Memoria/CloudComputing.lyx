#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass memoir
\use_default_options true
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Cloud Computing
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Todas las secciones detalladas en este documento no son las versiones que
 se mantendrán finalmente.
 Todas ellas deben ser revisadas, corregidas y ampliadas en la medida de
 lo posible.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
El 
\shape italic
Cloud Computing
\shape default
 o computación en la nube es el resultado de la evolución de los modelos
 de cómputo existentes, y permite al cliente abstraerse del 
\shape italic
hardware
\shape default
 con el cual va a trabajar y centrarse en los servicios que necesita para
 realizar dicho trabajo.
 De esta forma, el cliente solo debe preocuparse por lo que quiere hacer
 y no por configurar el entorno que necesita.
\end_layout

\begin_layout Standard
Así, en este nuevo modelo pueden combinarse muchas clases de recursos en
 tiempo real para satisfacer las especificaciones o proporcionar los servicios
 que el cliente necesita.
 Estos recursos pueden ser de naturaleza muy distinta: tiempo de CPU, espacio
 de almacenamiento, infraestructura de comunicaciones, etcétera.
\end_layout

\begin_layout Standard
Además, el 
\shape italic
Cloud Computing
\shape default
 elimina los costes de adquisición del 
\shape italic
hardware
\shape default
, las licencias del software, el mantenimiento de las instalaciones, etcétera.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename graficos/Cloud computing/generales-foto05.jpg
	scale 40
	rotateOrigin rightTop

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Computación en la nube: un servicio global
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
En este capítulo abordaremos el estudio de 
\shape italic
Cloud Computing
\shape default
, que proporciona la sólida base sobre la que hemos desarrollado 
\emph on
CygnusCloud
\emph default
.
 Para ello, comenzaremos definiéndolo detalladamente para después explicar
 su evolución y finalizar describiendo las características y los diferentes
 tipos de sistemas en la nube.
\end_layout

\begin_layout Section
Definición
\end_layout

\begin_layout Standard
Según indica el Instituto Nacional de Estándares y Tecnologías de Estados
 Unidos (NIST) en el documento 
\begin_inset CommandInset citation
LatexCommand cite
key "NIST2011"

\end_inset

, el 
\emph on
Cloud Computing 
\emph default
es
\end_layout

\begin_layout Quotation

\family sans
\shape italic
un modelo que permite acceder a través de una red, de forma adecuada, desde
 cualquier sitio y bajo demanda a un conjunto compartido de recursos informático
s configurables (como redes, servidores, almacenamiento, aplicaciones, servicios\SpecialChar \ldots{}

), que se pueden proporcionar y utilizar rápidamente y con un mínimo esfuerzo
 de gestión o interacción con el proveedor de servicios
\family default
.
\end_layout

\begin_layout Standard
En esta definición podemos distinguir ya las cuatro características fundamentale
s del 
\emph on
Cloud Computing
\emph default
:
\end_layout

\begin_layout Itemize
el autoservicio o administración propia de los servicios ofertados,
\end_layout

\begin_layout Itemize
la accesibilidad desde múltiples plataformas,
\end_layout

\begin_layout Itemize
la compartición de los recursos entre varios usuarios, y
\end_layout

\begin_layout Itemize
la prestación de servicios flexibles y perfectamente ajustables al entorno
 de trabajo.
\end_layout

\begin_layout Standard
A continuación, mostraremos los precedentes y la evolución histórica del
 
\emph on
Cloud Computing
\emph default
.
 Más adelante, en la sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Características-Cloud-Computing"

\end_inset

, hablaremos detalladamente de estas características.
\end_layout

\begin_layout Section
Historia
\end_layout

\begin_layout Subsection
Precedentes
\end_layout

\begin_layout Standard
Aunque las ideas que hay detrás del 
\emph on
Cloud Computing
\emph default
 pueden parecer novedosas, en realidad están presentes en nuestra sociedad
 desde hace siglos.
 Para justificar esto, utilizaremos un ejemplo.
\end_layout

\begin_layout Standard
Con independencia de nuestro lugar de procedencia, edad o condición, todos
 nosotros necesitamos una misma cosa para subsistir: agua.
 Así, los primeros humanos ya se asentaban en territorios cercanos a ríos
 y lagos para poder acceder al agua dulce.
\end_layout

\begin_layout Standard
Siglos después, el crecimiento de la población hizo necesaria la construcción
 de pozos para extraer el agua subterránea.
 Según los registros históricos, los primeros pozos se excavaron en Jericó
 (Israel) hace unos 7000 años.
\end_layout

\begin_layout Standard
La concentración de la población dio lugar a la aparición de los primeros
 sistemas de almacenamiento y distribución de agua potable.
 Los primeros que fueron lo suficientemente eficientes y que transportaron
 agua con la calidad suficiente aparecieron en la antigua Grecia, y los
 primeros que lograron cubrir grandes distancias, los famosos acueductos,
 se construyeron durante el Imperio Romano.
\end_layout

\begin_layout Standard
Tras el retroceso que experimentaron durante la Edad Media, los sistemas
 de distribución de agua volvieron a adquirir protagonismo en la Edad Contemporá
nea.
 Así, el primer sistema de suministro capaz de abastecer (mediante fuentes)
 a una ciudad completa (Paisley, Escocia) fue diseñado por John Gibb a principio
s del siglo XIX.
\end_layout

\begin_layout Standard
Hoy en día, todos nosotros disponemos de agua potable purificada abriendo
 cualquier grifo de nuestra casa.
 Cada vez que abrimos un grifo, estamos obviando
\end_layout

\begin_layout Itemize
la procedencia del agua,
\end_layout

\begin_layout Itemize
los embalses, pozos o depósitos en los que se almacena,
\end_layout

\begin_layout Itemize
la planta de tratamiento en la que se ha purificado,
\end_layout

\begin_layout Itemize
el diseño de las redes de distribución y de alcantarillado, y
\end_layout

\begin_layout Itemize
la planta donde se depurarán las aguas residuales que generamos en nuestro
 hogar.
\end_layout

\begin_layout Standard
De esta manera, aunque el sistema de distribución de agua puede llegar a
 ser muy complejo, para disponer de agua potable sólo debemos preocuparnos
 por pagar las factuas de la compañía suministradora.
 
\end_layout

\begin_layout Standard
Esta es la misma idea que hay detrás del 
\emph on
Cloud Computing
\emph default
: los usuarios se preocupan únicamente por utilizar los servicios que han
 contratado y no por la forma en que se los presta su proveedor.
\end_layout

\begin_layout Subsection
Aparición de las ideas básicas del 
\emph on
Cloud Computing
\end_layout

\begin_layout Standard
El origen de las ideas básicas que han dado lugar al 
\emph on
Cloud Computing
\emph default
 se remonta a la década de los 60.
\end_layout

\begin_layout Standard
Así, en 1961 John McCarthy dio una gran importancia al hecho de que el mundo
 de la informática debía ser de uso público.
 Por otra parte, J.C.R Licklider introdujo en 1962 la idea de una 
\begin_inset Quotes eld
\end_inset

red de ordenadores intergaláctica
\begin_inset Quotes erd
\end_inset

, que interconectaría a todo el mundo a lo largo y ancho del planeta y haría
 posible la compartición de información, datos y programas.
 
\end_layout

\begin_layout Subsection
Primeros años de los computadores en la empresa
\end_layout

\begin_layout Standard
En la década de los 80, los sistemas informáticos de las empresas operaban
 de acuerdo a un modelo cliente/servidor: todas las aplicaciones y todos
 los datos estaban almacenados en enormes computadores, los servidores u
 ordenadores centrales.
 Así, si un usuario quería acceder a cierta información o ejecutar un determinad
o programa, tenía que conectarse al ordenador central a través de un terminal
 o estación de servicio.
\end_layout

\begin_layout Standard
Pero los ordenadores centrales tenían unos recursos limitados, el acceso
 a los mismos no era inmediato y no soportaban la concurrencia, es decir,
 dos usuarios no podían acceder a la misma información a la vez.
 Por ello, los usuarios debían esperar a que el ordenador central atendiese
 sus peticiones, lo que daba lugar a enormes retardos.
\end_layout

\begin_layout Subsection
Aparición del modelo
\emph on
 peer to peer
\end_layout

\begin_layout Standard
El gran inconveniente del modelo cliente/servidor es que el servidor se
 convierte en un cuello de botella, ya que todos los usuarios necesitan
 acceder al servidor para trabajar.
 El modelo 
\emph on
peer to peer 
\emph default
(P2P) surgió a partir de la idea de no tener que utilizar el servidor como
 intermediario a la hora de establecer una comunicación entre dos ordenadores.
 En este modelo, todos los ordenadores son a clientes y servidores a la
 vez.
 
\end_layout

\begin_layout Standard
La principal finalidad con las que se desarrollo el modelo P2P fue su uso
 en internet: los mensajes podían propagarse desde cualquier ordenador,
 lo que permitía incrementar la velocidad de trasferencia al no producirse
 las transmisiones desde un único punto.
 
\end_layout

\begin_layout Standard
En la práctica, puesto que el procesamiento de información requiere tiempo
 y energía y no todos los ordenadores estab conectados permanentemente,
 la Red no sigue este modelo de forma estricta: cada usuario sólo puede
 conectarse a un conjunto de servidores, lo que le proporciona mayor libertad
 con respecto al modelo cliente/servidor y permite restringir el control
 y la gestión de los datos a un conjunto de servidores centrales.
 
\end_layout

\begin_layout Subsection
Desarrollo del 
\emph on
Cloud Computing
\end_layout

\begin_layout Standard
A finales de la década de los 90 aparecieron las primeras empresas que empezaron
 a proporcionar servicios a otras a traves de la 
\emph on
web
\emph default
 y con un coste considerablemente inferior.
 Entre todas ellas, destaca 
\emph on
Salesforce.com
\emph default
, que comenzó a vender aplicaciones a empresas a través de la 
\emph on
web
\emph default
 en 1999.
\end_layout

\begin_layout Standard
Tras el estallido de la burbuja .com, 
\emph on
Amazon
\emph default
 pasó a jugar un papel protagonista en el desarrollo del 
\emph on
Cloud Computing 
\emph default
al iniciar la modernización de sus centros de proceso de datos.
 Para evitar su infrautilización, 
\emph on
Amazon
\emph default
 apostó por la nueva arquitectura 
\emph on
Cloud 
\emph default
y lanzó al mercado el paquete 
\emph on
Amazon Web Services
\emph default
 en julio de 2002.
 Este incluía almacenamiento, capacidad de cómputo e incluso aprovechaba
 la inteligencia humana (en el caso del servicio 
\emph on
Amazon Mechanical Turk
\emph default
).
\end_layout

\begin_layout Standard
Cuatro años más tarde, en 2006, 
\emph on
Amazon
\emph default
 lanzó al mercado su producto 
\emph on
Elastic Compute Cloud
\emph default
, que constituye una infraestructura completa y accesible de 
\emph on
Cloud Computing 
\emph default
y que permite alquilar máquinas virtuales en las que individuos y pequeñas
 empresas pueden alojar sus propias aplicaciones.
\end_layout

\begin_layout Standard
En 2009, Google dio el gran salto al lanzar 
\emph on
Google Apps
\emph default
, un conjunto de aplicaciones diseñadas para ser utilizadas a través de
 un navegador web.
\end_layout

\begin_layout Standard
Por otra parte, las 
\emph on
killer apps 
\emph default
creadas por empresas como Microsoft y Google también han tenido una gran
 importancia en el desarrollo del 
\emph on
Cloud Computing
\emph default
.
 Un claro ejemplo son los servicios de correo web, que han desterrado a
 los clientes de correo electrónico tradicionales en muchos casos y han
 contribuido a que todos los usuarios estén utilizando tecnologías 
\emph on
Cloud
\emph default
 en su vida diaria.
\end_layout

\begin_layout Standard
En la actualidad, resulta evidente que el 
\emph on
Cloud Computing
\emph default
 adquiere cada vez más importancia y que ha venido para quedarse: hoy en
 día, es posible acceder a estos servicios desde cualquier plataforma y
 desde casi cualquier lugar del mundo, lo que hace que cada vez más aplicaciones
 se adapten al 
\emph on
Cloud
\emph default
.
\end_layout

\begin_layout Standard
Además, la mejora de la seguridad permite que las empresas puedan ampliar
 su infraestructura o externalizarla, lo que se traduce en un aumento de
 la flexibilidad, en un mayor número de servicios disponibles y en un importante
 ahorro de coste.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename graficos/Cloud computing/sparkindark_cloudcomputing-660x495.png
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
El 
\emph on
Cloud Computing
\emph default
 en la actualidad
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Características 
\begin_inset CommandInset label
LatexCommand label
name "sec:Características-Cloud-Computing"

\end_inset


\end_layout

\begin_layout Standard
Las características que han permitido que el 
\shape italic
Cloud Computing
\shape default
 sea un servicio en auge en la actualidad son las siguientes:
\end_layout

\begin_layout Itemize

\series bold
Agilidad
\series default
.
 El usuario puede gestionar de manera sencilla las aplicaciones que necesita
 en su entorno de trabajo.
 Así, el usuario puede adquirir o dejar de utilizar sus aplicaciones según
 sus necesidades y de manera fácil y rápida.
 
\end_layout

\begin_layout Itemize

\series bold
Reducción de costes
\series default
.
 Dado que existen empresas dedicadas a alquilar 
\shape italic
hardware
\shape default
 a los usuarios interesados en ejecutar sus aplicaciones en la nube, estos
 no necesitarán hacer frente a los gastos iniciales de compra de recursos
 ni a los gastos de mantenimiento.
 
\end_layout

\begin_deeper
\begin_layout Standard
Si bien es cierto que es necesario pagar un alquiler por los servidores
 utilizados, este es menor a los posibles gastos a corto y largo plazo a
 los que habría que hacer frente.
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Accesibilidad
\series default
.
 La independencia entre el entorno de trabajo y la localización del servidor
 donde se ejecuta el servicio permite al usuario acceder a sus herramientas
 de trabajo desde cualquier dispositivo con acceso a la web.
 
\end_layout

\begin_deeper
\begin_layout Standard
De esta forma, los clientes pueden trabajar desde sus equipos de sobremesa,
 sus portátiles o incluso desde sus dispositivos móviles.
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Elasticidad
\series default
 y 
\series bold
escalabilidad
\series default
.
 Las aplicaciones en la nube son totalmente elásticas en cuanto a su sencillez
 de implementación y adaptabilidad.
 Además, son totalmente escalables.
 Por ejemplo, el sistema de una empresa puede modificarse para a atender
 al triple de usuarios con total normalidad y rapidez.
 
\end_layout

\begin_layout Itemize

\series bold
Recuperación
\series default
.
 Los proveedores de servicios en la nube proporcionan a los usuarios sistemas
 de almacenamiento secundario en servidores.
 Así, si se producen pérdidas de información estas pueden resolverse de
 manera inmediata.
 
\end_layout

\begin_layout Itemize

\series bold
Estabilidad
\series default
.
 Las empresas de gestión de las aplicaciones en la nube aseguran al usuario
 una fuerte estabilidad en su entorno y permiten un rápido restablecimiento
 de los servicios que experimenten algún problema.
 
\end_layout

\begin_layout Itemize

\series bold
Seguridad
\series default
.
 Quizás esta es la característica que suscita una mayor controversia el
 
\shape italic
Cloud Computing
\shape default
.
 Los clientes de estos servicios pueden tener la sensación de que al almacenar
 su información en un lugar externo a su propio dispositivo, resulta más
 sencillo que terceras personas puedan acceder a la misma.
\end_layout

\begin_deeper
\begin_layout Standard
Sin embargo, esto no es así en realidad.
 Las empresas encargadas de ofertar servicios en la nube mantienen estrictos
 controles de seguridad para evitar que la información de sus clientes pueda
 ser filtrada al exterior.
\end_layout

\begin_layout Standard
Además, para almacenar esta información suelen utilizar centros de datos
 secundarios especializados en la protección y vigilancia de datos.
 
\end_layout

\end_deeper
\begin_layout Section
Modelos de servicio 
\end_layout

\begin_layout Standard
El 
\shape italic
Cloud Computing
\shape default
 ofrece tres modelos de servicio fundamentales, que distinguen por la forma
 en que los clientes utilizan sus servicios contratados en la nube.
\end_layout

\begin_layout Standard
Estos modelos no son siempre excluyentes entre sí, y existen proveedores
 que mezclan algunos de ellos.
 Por ejemplo, el servicio 
\emph on
Google App Engine
\emph default
 permite que los clientes ejecuten aplicaciones web sobre la infraestructura
 de 
\emph on
Google
\emph default
.
 Así, se están combinando el modelo de plataforma como servicio de la infraestru
ctura web de 
\emph on
Google
\emph default
 y un modelo de 
\emph on
software 
\emph default
como servicio
\emph on
.
\end_layout

\begin_layout Subsection
Infraestructura como servicio (IaaS)
\end_layout

\begin_layout Standard
Su nombre procede del termino inglés 
\shape italic
Infrastructure as a Service
\shape default
 (IaaS).
 Este es el modelo más básico.
 En él, el proveedor oferta al usuario un conjunto de maquinas virtuales
 sobre las que trabajar.
 Así, el cliente estará contratando únicamente la infraestructura tecnológica,
 que dispone de cierta capacidad de procesamiento, de almacenamiento y de
 comunicación.
 
\end_layout

\begin_layout Standard
Cuando el cliente contrata la infraestructura y el proveedor acaba de configurar
la, el cliente la utilizará para alojar sus aplicaciones, que se ejecutarán
 en máquinas virtuales.
 Estas maquinas virtuales pueden gestionarse a través de hipervisores (como
 Xen o KVM) o a través de otros sistemas de virtualización como VirtualBox
 o VMWare.
 
\end_layout

\begin_layout Standard
Puesto que el proveedor del servicio se ocupará de la gestión de las máquinas
 virtuales, el cliente puede contratar tantas maquinas virtuales como necesite.
 
\end_layout

\begin_layout Standard
En cualquier caso, una vez obtenidas las maquinas virtuales el cliente instalará
 en ellas el sistema operativo que más le interese y las aplicaciones que
 vaya a utilizar.
 Por ello, en este modelo el cliente es el responsable del mantenimiento
 y configuración del entorno.
\end_layout

\begin_layout Standard
Además, puesto que los proveedores no deben preocuparse por otros aspectos
 como la seguridad o el pago de licencias, únicamente cobran por la cantidad
 de recursos asignados y consumidos.
 
\end_layout

\begin_layout Standard
Algunos servicios de este tipo son 
\shape italic
Amazon CloudFormation
\shape default
, 
\shape italic
Rackspace Cloud
\shape default
, 
\shape italic
Terremark
\shape default
, 
\shape italic
Windows Azure Virtual Machines
\shape default
 y 
\shape italic
Google Compute Engine
\shape default
.
\begin_inset CommandInset citation
LatexCommand cite
key "PMC2008"

\end_inset


\end_layout

\begin_layout Subsection
Plataforma como servicio (PaaS)
\end_layout

\begin_layout Standard
Su nombre procede del termino inglés 
\shape italic
Platform as a Service
\shape default
 (PaaS).
 Los proveedores de este tipo de servicios ofrecen a sus clientes una plataforma
 completa, la cual incluye el sistema operativo, el conjunto de todas las
 aplicaciones instaladas, la gestión de las bases de datos y el conjunto
 de servicios 
\shape italic
web
\shape default
 que el cliente necesite.
 Esta plataforma se instalará sobre una infraestructura, también proporcionada
 por el proveedor.
 
\end_layout

\begin_layout Standard
De esta forma, en este caso el cliente despliega las aplicaciones que necesite
 (que pueden estar desarrolladas por él mismo o por terceros) sin preocuparse
 por los costes de compra y de mantenimiento del 
\shape italic
hardware 
\emph on
y del 
\emph default
software
\shape default
.
 
\end_layout

\begin_layout Standard
Este modelo resulta ventajoso tanto para el cliente como para el proveedor,
 ya que
\end_layout

\begin_layout Itemize
el primero no necesita costear el precio completo de las licencias de todas
 las herramientas que utiliza.
 Esto resulta especialmente interesante en el caso de 
\emph on
software
\emph default
 muy caro y muy poco utilizado por el cliente: en estos casos, la adquisición
 de una licencia completa es un despilfarro.
 
\end_layout

\begin_layout Itemize
el segundo puede ofrecer un mismo entorno a un gran número de clientes con
 necesidades similares.
\end_layout

\begin_layout Standard
Algunos servicios de este tipo son 
\shape italic
Amazon Elastic Beanstalk, Cloud Foundry, Heroku, Force.com, EngineYard, Mendix,
 Google App Engine, Windows Azure Compute y OrangeScape
\shape default
.
 
\end_layout

\begin_layout Subsection
Software como servicio 
\end_layout

\begin_layout Standard
Del termino inglés Software
\shape italic
 as a service
\shape default
 (Saas), este modelo es el que proporciona menos libertad y también menos
 preocupaciones al cliente.
 En este caso, el proveedor no solo ofrece la infraestructura y las herramientas
, sino que sobre ellas instala el conjunto de aplicaciones que será usadas
 por el cliente.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Esto debe pertenecer a otra parte del documento y se ha movido aquí ,pero
 no recuerdo a cual :
\end_layout

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

Lo que hace diferente a una aplicación ejecutada en la nube del resto de
 aplicaciones es su elasticidad.Esta elasticidad puede entenderse como el
 reparto de las tareas en múltiples maquinas virtuales en tiempo de ejecución
 para acelerar la ejecución de las tareas más demandadas.Unos gestores de
 carga son los encargados de balancear el trabajo entre múltiples maquinas
 virtuales.
 Este proceso es invisible al cliente ya que el solo tiene un punto de acceso
 por el que interactuar con las aplicaciones.
 Para poder dar cabida a tantos usuarios en la nube las aplicaciones pueden
 ser multiusuario, es decir, una maquina puede atender tareas de más de
 un usuario a la vez
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Esto no solo libera al cliente de instalar y ejecutar las aplicaciones en
 sus propia computadora sino que también se encarga del mantenimiento, la
 recuperación y el soporte de las mismas.
\end_layout

\begin_layout Standard
El coste de alquiler de las aplicaciones en un modelo de software como servicio
 suele estar ligado a una tarifa plana anual
\begin_inset CommandInset citation
LatexCommand cite
key "IT2012"

\end_inset

 o mensual por usuario
\begin_inset CommandInset citation
LatexCommand cite
key "TC2011"

\end_inset

.
 Este precio dependerá del número de usuarios que vayan a usar la aplicación
 y puede reajustarse si se añaden o quitan usuarios.
\end_layout

\begin_layout Standard
Algunos ejemplos de software como servicio son 
\shape italic
Google Apps, innkeypos, Quickbooks Online, Successfactors Bizx, Limelight
 Video Platform, Salesforce.com y Microsoft Office 365
\shape default
.
 
\end_layout

\begin_layout Section
Otros modelos de servicio especiales
\end_layout

\begin_layout Standard
A parte de los tres modelos de servicio fundamentales , existen otro modelos
 menos relevantes que han surgido con el fin de resolver problemas muy puntuales
 .
 En general , estos modelos secundarios han sido creados al mezclar dos
 de los modelos fundamentales.
\end_layout

\begin_layout Subsection
Escritorio como servicio
\end_layout

\begin_layout Standard
Del inglés Desktop as a Service (DaaS) , también conocido como escritorio
 virtual , en el se ofrece al cliente un escritorio con todas las aplicaciones
 pertinentemente instaladas para ser ejecutadas a su gusto.
 
\end_layout

\begin_layout Standard
Este escritorio puede ser usado en paralelo por múltiples usuarios sin que
 las acciones de uno afecte sobre el resto.
 Así cuando el usuario inicia la sesión su configuración personal se carga
 en el escritorio , así como toda la información previa que el usuario había
 dejado guardada en él .
 De igual forma , cuando el usuario se da de baja en la sesión se almacena
 la información y la configuración que el usuario hubiera dejado antes de
 cerrar su sesión.
\end_layout

\begin_layout Subsection
Entorno de pruebas como servicio 
\end_layout

\begin_layout Standard
Del inglés Test environment as a service(TEaaS) , este modelo ofrece al
 cliente un entorno en el que poder realizar sus pruebas sobre un determinado
 software.
\end_layout

\begin_layout Standard
Un ejemplo de entorno de pruebas como servicio viene dado por testersdesk.com.
\end_layout

\begin_layout Subsection
Identidad como servicio (IDaaS)
\end_layout

\begin_layout Standard
El establecimiento y la prueba de la identidad es una función de red central.
 Un servicio de identidad almacena la información asociada con una entidad
 digital de forma que pueda ser consultado y gestionado para uso en las
 transacciones electrónicas.
 los servicios de identidad tiene como funciones principales las de almacenamien
to de datos, motor de búsqueda y control de la integridad de dichos datos.
\end_layout

\begin_layout Standard
Ya se trate de la protección del tráfico de red, acceso a recursos privilegiados
, o algún otro derecho o privilegio definido, la autorización valida de
 un objeto en función de su identidad es el elemento central del diseño
 de una red segura.
 
\end_layout

\begin_layout Standard
De esta forma la identidad como servicio permite gestionar como y en que
 medida debe ser gestionada los datos enviados y recibidos por un determinado
 usuario.
\begin_inset CommandInset citation
LatexCommand cite
key "BS2011"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
No me acaba de quedar claro como funciona la identidad como servicio pero
 bueno.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Tipos
\end_layout

\begin_layout Standard
De cara a que grupo de clientes se encuentre destinados los servicios y
 donde se encuentren los servidores podemos distinguir tres tipo de computación
 en la nube.
 
\end_layout

\begin_layout Subsection
Cloud público 
\end_layout

\begin_layout Standard
Es el tipo más común y el que mejor representa la idea de computación en
 la nube.
 En este tipo, los servicios están destinados al público en general y suelen
 ser gratuitos o bien ligados a un modelo de “pago por uso”.
 
\end_layout

\begin_layout Standard
Este modelo es el mejor para aquellos negocios donde es necesario:
\end_layout

\begin_layout Itemize
controlar los picos de carga.
\end_layout

\begin_layout Itemize
dirigir las aplicaciones del modelo de software como servicio.
\end_layout

\begin_layout Itemize
dirigir las aplicaciones que son utilizadas por muchos usuarios que de otra
 manera necesitarían una gran inversión en infraestructuras para sus negocios.
 
\end_layout

\begin_layout Itemize
usar un servicio compartido por un número elevado de usuarios.
\end_layout

\begin_layout Itemize
utilizar herramientas para el testeo y desarrollo de una aplicación.
\end_layout

\begin_layout Itemize
utilizar un modelo de software como servicio (SaaS) con una buena estrategia
 de seguridad.
\end_layout

\begin_layout Itemize
una capacidad de almacenamiento incremental.
 La capacidad que va a necesitar no se puede aproximar desde el principio.
\end_layout

\begin_layout Itemize
trabajar en un proyecto colaborativo.
\end_layout

\begin_layout Itemize
desarrollar una aplicación utilizando un modelo de plataforma como servicio
 (PaaS).
\begin_inset CommandInset citation
LatexCommand cite
key "JH2009"

\end_inset


\end_layout

\begin_layout Standard
Las principales ventajas que ofrece este tipo son la gran flexibilidad,
 la seguridad y el ahorro en su infraestructura.
 Además no requiere grandes inversiones, es escalable y no tiene límite
 de recursos ni de disponibilidad.
 Algunos ejemplos de cloud públicos son el de Amazon, el de Microsoft o
 el de Yahoo.
\begin_inset CommandInset citation
LatexCommand cite
key "NIST2011,IDC2008"

\end_inset

 .
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout

\shape italic
Facebook, Tuenti, Google yLinkedIn , no me convencen que no sean clouds
 publicos
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Cloud privado
\end_layout

\begin_layout Standard
Es el segundo tipo de computación en la nube más utilizado.
 En general se acepta que cualquier centro de datos propiedad de una organizació
n y destinado a su uso exclusivo es considerado cloud privado.
 Este cloud debe tener cierto nivel de virtualización y autonomía.
 
\end_layout

\begin_layout Standard
En general los proveedores de clouds privados suelen ofrecer infraestructuras
 a grandes empresas para que pueda residir en ellas sus centros de datos.
 Por ello los 
\emph on
clouds
\emph default
 privados son el tipo que debe prestar una mayor atención a la seguridad
 y mantenimiento de los datos que manejan, lo que hace que los clouds privados
 resulten algo más costosos que el resto de tipos.
\end_layout

\begin_layout Standard
Las principales ventajas que ofrece el cloud privado son aislamiento y exclusivi
dad de su propia infraestructura, así como máximas garantías de seguridad
 y privacidad en sus sistemas de información.
 
\begin_inset CommandInset citation
LatexCommand cite
key "NIST2011,IDC2008,IW2010,GH2009"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Tengo que mezclar esto con lo anterior de forma que no parezca demasiado
 forzado.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un cliente suele usar un cloud privado cuando :
\end_layout

\begin_layout Itemize
su negocio se basa en su información y sus aplicaciones.
 Por lo tanto, el control y la seguridad son primordiales.
\end_layout

\begin_layout Itemize
su negocio está relacionado con la gestión de la información de otras empresas.
\end_layout

\begin_layout Itemize
su empresa es lo suficientemente grande como para poder mantener un sistema
 en la nube propio eficiente.
\begin_inset CommandInset citation
LatexCommand cite
key "JH2009"

\end_inset


\end_layout

\begin_layout Subsection
Cloud híbrido
\end_layout

\begin_layout Standard
En este tipo se mezclan las características más importantes del cloud privado
 y público, de manera que el cliente gestiona y explota en exclusividad
 su infraestructura pero dispone de acceso al cloud público que mantiene
 el proveedor en sus instalaciones.
 El cloud híbrido combina los beneficios del cloud público junto con los
 del cloud privado .
 Así por un lado extrae del cloud privado la exclusividad de tener un servidor
 propio mientras que por el otro extrae del cloud público la posibilidad
 de aumentar sus recursos obteniéndolos de la nube a modo de ampliación
 y adaptación de su arquitectura.
 
\end_layout

\begin_layout Standard
Dentro del cloud híbrido existen dos submodelos :
\end_layout

\begin_layout Itemize
Cloud Privado "
\shape italic
inHouse
\shape default
" : El cliente pone las máquinas y las instalaciones donde situarlas para
 montar su cloud, es decir, la infraestructura se encuentra físicamente
 en las instalaciones del cliente.
 Este modelo requiere una importante inversión por parte del cliente, tanto
 económica como de recursos, y la seguridad de la información es relativa
 a la experiencia y capacidad técnica disponible.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename graficos/Cloud computing/cloud-hosting-hibrido-inhouse.jpg
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Cloud privado 
\begin_inset Quotes eld
\end_inset


\shape italic
inHouse
\shape default

\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Tanto Cloud Privado como Cloud Público, en 
\shape italic
Datacenter
\shape default
 del proveedor : La infraestructura del cliente puede residir en el centro
 de datos del proveedor o bien puede subcontratarse, lo que hace desaparecer
 la necesidad de una inversión inicial.
 Esto permite reducir costes al modelo de pago por uso, y escalar de forma
 rápida y flexible y sin inversión extra.
 
\begin_inset CommandInset citation
LatexCommand cite
key "NIST2011,AS2012,IDC2008"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename graficos/Cloud computing/cloud-hosting-hibrido-subcontratado.jpg
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Cloud híbrido en el centro de proceso de datos del proveedor
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Tengo que mezclar esto con lo anterior de forma que no parezca demasiado
 forzado.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un cliente suele usar un cloud híbrido cuando:
\end_layout

\begin_layout Itemize
su compañía sigue una organización privada pero delega ciertas funcionalidades
 en servicios públicos.
 Por ejemplo una empresa mantiene una infraestructura privada para el desarrollo
 de sus aplicaciones pero utiliza servicios públicos para almacenar información.
\end_layout

\begin_layout Itemize
tiene una empresa que usa un modelo de software como servicio pero necesita
 cierta infraestructura privada para almacenar información que necesita
 unos requisitos de seguridad muy elevados.
\begin_inset CommandInset citation
LatexCommand cite
key "JH2009"

\end_inset


\end_layout

\begin_layout Subsection
Cloud comunitario
\end_layout

\begin_layout Standard
En el caso de este tipo de cloud, dos o más organizaciones forman una alianza
 y comparten una infraestructura con un marco de seguridad y privacidad
 común.
 Esto es posible ya que todas las empresas aliadas tienen unos objetivos
 comunes y requieren de los mismos recursos y herramientas.
 
\end_layout

\begin_layout Standard
De esta forma, las empresas participantes pueden beneﬁciarse de una exclusividad
 casi total reduciendo el coste de compra y de mantenimiento de servidores.
 
\end_layout

\begin_layout Standard
El principal inconveniente de este modelo es la pérdida del nivel de seguridad
 característico de los clouds privados, ya que este pasa a ser dependiente
 del anﬁtrión de la infraestructura.
\begin_inset CommandInset citation
LatexCommand cite
key "NIST2011,IDC2008"

\end_inset


\end_layout

\begin_layout Section
Ventajas e inconvenientes
\end_layout

\begin_layout Standard
Tal y como parece el 
\shape italic
Cloud Computing
\shape default
 ofrece a los usuarios una nueva forma de entender.Queda claro que las ventajas
 que ofrece esta computación hará posible que en un futuro no muy lejano
 la idea de utilizar un conjunto de servicios no residentes en nuestros
 ordenadores personales será aceptado como algo común entre los usuarios.
 Sin embargo, aunque las ventajas que ofrece este sistema con respecto a
 los anteriores lo convierta en actualmente la mejor opción no hay que olvidar
 que el 
\shape italic
Cloud Computing
\shape default
 cuenta con un reducido conjunto de desventajas.
 A continuación detallaremos las ventajas y desventajas más relevantes de
 la computación en la nube: 
\end_layout

\begin_layout Subsection
Ventajas 
\end_layout

\begin_layout Standard
Entre las ventajas más importantes del 
\shape italic
Cloud Computing
\shape default
 podemos mencionar: 
\end_layout

\begin_layout Itemize

\series bold
Accesibilidad
\series default
, que suele ser uno de los principales motivos por el cual se acaba eligiendo
 este sistema frente al resto.
 El uso del 
\emph on
Cloud Computing
\emph default
 permite que todos los empleados puedan acceder a los datos de la organización
 no importando el lugar en el que se encuentren de forma fácil y rápida.
 
\end_layout

\begin_layout Itemize

\series bold
Reducción de gastos en infraestructura
\series default
,
\series bold
 mantenimiento y servicios
\series default
, mediante este tipo de tecnología se reduce los gastos de adquisición y
 mantenimiento de los servidores sobre los que se ejecutan las aplicaciones.
 
\end_layout

\begin_layout Itemize

\series bold
Escalabilidad
\series default
, los servidores son capaces de proveer recursos, software y/o datos en
 función de la demanda necesaria en cada momento, sin que el usuario tenga
 conocimiento acerca de los servicios que le son proporcionados.
\end_layout

\begin_layout Itemize

\series bold
Seguridad
\series default
 a la hora de mantener la integridad de los datos, si bien la cosa depende
 del cloud que se utilice.
\end_layout

\begin_layout Itemize
I
\series bold
ntegración probada de servicios
\series default
.
 Las aplicaciones en la nube pueden ser adaptadas con gran rapidez y facilidad
 al resto de aplicaciones empresariales.
\begin_inset CommandInset citation
LatexCommand cite
key "SF2011"

\end_inset


\end_layout

\begin_layout Itemize

\series bold
Prestación de servicios a nivel mundial
\series default
.
 Independientemente donde se encuentre la infraestructura, los servicios
 que presta cierta organización pueden utilizarse en cualquier parte del
 mundo de manera rápida y sencilla.
\end_layout

\begin_layout Itemize

\series bold
Actualizaciones automáticas
\series default
 .
 En sistemas ajenos al 
\shape italic
Cloud Computing
\shape default
 el usuario debe dedicar tiempo y esfuerzo en volver a personalizar e integrar
 la aplicación cada vez que se realice una actualización de la misma.
 Con la computación en la nube estas actualizaciones se realizan de manera
 automática y sin afectar al cliente.
\end_layout

\begin_layout Subsection
Desventajas
\end_layout

\begin_layout Standard
El 
\shape italic
Cloud Computing
\shape default
 también tiene sus inconvenientes.
 Las principales desventajas a destacar son : 
\end_layout

\begin_layout Itemize
Privacidad.
 Es más una cuestión de confianza de los usuarios que un problema de la
 computación en la nube en sí.
 Al estar almacenados los datos de los usuarios en equipos externos, este
 teme que otros puedan acceder fácilmente a su información.
 
\end_layout

\begin_layout Itemize
La gran dependencia del proveedor de servicios en la nube.
 Esta desventaja reside en que el caso de optar por un sistema en la nube
 no privado el usuario pasa a depender de su proveedor para desarrollar
 total o parcialmente su actividad.
 
\begin_inset CommandInset citation
LatexCommand cite
key "BJ2008"

\end_inset


\end_layout

\begin_layout Itemize
La disponibilidad de los servicios está estrechamente ligada al correcto
 funcionamiento de la red.
\end_layout

\begin_layout Itemize
La disponibilidad de herramientas especializadas podría tardar un largo
 periodo de tiempo hasta que sea factible su utilización en la nube.
 Es decir, existen ciertas necesidades que , a día de hoy , la nube no puede
 cubrir.
\end_layout

\begin_layout Itemize
La escalabilidad debe planificarse con cuidado.
 A medida que más usuarios empiecen a compartir la infraestructura de la
 nube,los servidores se encontrarán más sobrecargados lo cual puede provocar
 importantes degradaciones del servicio en el caso de que la organización
 no haya realizado las previsiones oportunas.
 
\end_layout

\begin_layout Section
El 
\shape italic
Cloud Computing
\shape default
 como un estándar abierto
\end_layout

\begin_layout Standard
Si tenemos en cuenta el desarrollo de la computación en nube hasta la fecha,
 es evidente que esta tecnología es el resultado de la convergencia de muchas
 normas diferentes.
 El crecimiento del Cloud Computing ha dado lugar a un importante impulso
 por parte de la industria para crear estándares abiertos basados en la
 nube.
\end_layout

\begin_layout Standard
En la actualidad, el 
\shape italic
Cloud Computing
\shape default
 se rige por los siguientes estandares tecnológicos:
\end_layout

\begin_layout Itemize

\series bold
Virtualización de la plataforma de recursos
\series default
.
 Consiste fundamentalmente en la abstracción de un sistema hardware completo
 permitiendo que diversas instancias de sistemas operativos corran sobre
 él.
\end_layout

\begin_layout Itemize

\series bold
Arquitectura orientada a servicios
\series default
.
 Permite la creación de sistemas de información altamente escalables que
 reflejan el negocio de una organización y a su vez brinda una forma bien
 definida de exposición e invocación de servicios, lo cual facilita la interacci
ón entre diferentes sistemas propios o de terceros.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
FrameWork
\shape default
 orientado a aplicaciones web
\series default
.
 Consiste en un conjunto de conceptos, prácticas y criterios para enfocar
 un tipo de problemática en las aplicaciones web que sirva como referencia,
 para enfrentar y resolver nuevos problemas de índole similar.
\end_layout

\begin_layout Itemize

\series bold
Despliegue de software de código abierto
\series default
.
 Basado en la idea del desarrollo de aplicaciones de código abierto que
 puedan ser utilizadas y ampliadas por una comunidad de usuarios.
\end_layout

\begin_layout Itemize

\series bold
Servicios de web estandarizados
\series default
.
 Consiste en el uso de servicios web que sigan los estandares establecidos
 con la finalidad de facilitar la incorporación de dichos servicios en aplicacio
nes.
\end_layout

\begin_layout Itemize

\series bold
Sistemas autónomos
\series default
.
 Se define como un grupo de redes IP que poseen una política de rutas propia
 e independiente.
 Un sistema autónomo realiza su propia gestión del tráfico que fluye entre
 él y los restantes Sistemas Autónomos que forman Internet.
\begin_inset Note Note
status open

\begin_layout Plain Layout
No me convence demasiado la definición.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\series bold
\shape italic
Computación Grid 
\series default
\shape default
.
 Permite utilizar de forma coordinada todo tipo de recursos (entre ellos
 cómputo, almacenamiento y aplicaciones específicas) que no están sujetos
 a un control centralizado.
 
\end_layout

\begin_layout Standard
Estos estandares permiten ajustar los diferentes modelos de negocio que
 los proveedores de servicios en la nube pueden ofertar.
 Para conseguir que los datos puedan ser portables y accesibles universalmente
 es necesario que estos estandares sean abiertos.
 
\end_layout

\begin_layout Standard
La carrera para crear la primera generación de tecnologías abiertas en la
 nube que competirán con tecnologías patentadas que ofrecen las empresas
 como Microsoft (Azure Platform) y VMware (vSphere) ya está en marcha.
 Algunos ejemplos de ello son:
\end_layout

\begin_layout Itemize
Rackspace.com, uno de los grandes proveedores de servicios cloud IaaS, anunció
 en julio de 2010 que está iniciando un proyecto de código abierto llamada
 OpenStack.
 Este software desarrollado se distribuye bajo la licencia Apache 2.0.
\end_layout

\begin_layout Itemize
La NASA también ha donado parte de la tecnología Nebula Cloud Platform que
 desarrolló.
 
\begin_inset CommandInset citation
LatexCommand cite
key "BS2011"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename graficos/Cloud computing/fin.jpg
	scale 50
	rotateOrigin rightTop

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\shape italic
Cloud computing
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
